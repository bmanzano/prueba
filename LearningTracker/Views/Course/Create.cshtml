@model LearningTracker.Models.CourseViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CourseViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DurationAVG, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DurationAVG, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DurationAVG, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <h4>Selecciona Categoria</h4>
        <div class="panel panel-primary">
            <div class="panel-heading">Temas</div>
            <div class="panel-body">
                @if (Model != null)
                {
                    foreach (var topic in Model.AvailableTopics)
                    {
                        var selected = "";
                        if (Model.SelectTopics != null)
                        {
                            if (Model.SelectTopics.Contains(topic.Id.Value))
                            {
                                selected = "checked";
                            }
                        }
                        @*<input type="checkbox" name="SelectTopics" value="@topic.Id.Value" @selected />*@@topic.Name
                        <div class="[ form-group ]">
                            <input type="checkbox" name="SelectTopics" id="@topic.Id.Value@topic.Name" autocomplete="off" @selected value="@topic.Id.Value" />
                            <div class="[ btn-group ]">
                                <label for="@topic.Id.Value@topic.Name" class="[ btn btn-primary ]">
                                    <span class="[ glyphicon glyphicon-ok ]"></span>
                                    <span> </span>
                                </label>
                                <label for="@topic.Id.Value@topic.Name" class="[ btn btn-default active ]">
                                    @topic.Name
                                </label>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
